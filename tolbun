<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>Столбун: Новелла (Game)</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <style>
    :root{ --bg:#0e0e10; --panel:#15151a; --text:#fff; --muted:#b8b8c0; --accent:#ffd200; }
    *{ box-sizing:border-box }
    body{ margin:0; background:var(--bg); color:var(--text); font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif; }
    .app{ max-width:720px; margin:0 auto; min-height:100dvh; padding:16px; display:flex; flex-direction:column; gap:12px; }
    header{ display:flex; justify-content:space-between; align-items:center; gap:8px; }
    .title{ font-weight:700; }
    .btn{ border:0; border-radius:10px; padding:12px 14px; background:#22242e; color:#fff; cursor:pointer; }
    .btn.primary{ background:var(--accent); color:#000; }
    .panel{ background:var(--panel); border-radius:14px; padding:14px; }
    .scene-img{ width:100%; height:36dvh; object-fit:cover; border-radius:12px; background:#0b0b0f; }
    .scene-text{ margin-top:12px; font-size:16px; line-height:1.5; }
    .choices{ margin-top:12px; display:grid; gap:10px; }
    .choice{ border:0; border-radius:12px; padding:12px 14px; background:#1f2130; color:#fff; text-align:left; }
    .choice:hover{ background:#24273a; }
    .meta{ margin-top:8px; color:var(--muted); font-size:12px; text-align:right; }
    .footer{ display:flex; gap:8px; }
    @media (max-width:600px){ .app{ padding:12px } .panel{ padding:12px } .scene-img{ height:32dvh } }
  </style>
</head>
<body>
  <div class="app">
    <header>
      <div class="title">Столбун: Новелла</div>
      <div>
        <button id="btnReset" class="btn">Сброс</button>
        <button id="btnShareScore" class="btn primary">Отправить очки</button>
      </div>
    </header>

    <div class="panel">
      <img id="sceneImg" class="scene-img" alt="scene" />
      <div id="sceneText" class="scene-text"></div>
      <div id="choices" class="choices"></div>
      <div id="meta" class="meta"></div>
      <div class="footer">
        <button id="btnBack" class="btn">Назад</button>
        <button id="btnRestart" class="btn">Заново</button>
      </div>
    </div>
  </div>

  <script>
    // ===== Сцены (пример) =====
    const SCENES = {
      start: {
        img: 'https://images.unsplash.com/photo-1535223289827-42f1e9919769?q=80&w=1200&auto=format&fit=crop',
        text: 'Ночь. Пустая улица. Вдалеке — фигура Столбуна. «Ты всё ещё ищешь ответы?»',
        choices: [{ text: 'Подойти ближе', next: 'approach' }, { text: 'Наблюдать издалека', next: 'observe' }]
      },
      approach: {
        img: 'https://images.unsplash.com/photo-1501785888041-af3ef285b470?q=80&w=1200&auto=format&fit=crop',
        text: '«Твои решения — не случайны», — говорит он.',
        choices: [{ text: 'Спросить о решениях', next: 'ask' }, { text: 'Сделать вид, что понимаешь', next: 'pretend' }]
      },
      observe: {
        img: 'https://images.unsplash.com/photo-1500530855697-b586d89ba3ee?q=80&w=1200&auto=format&fit=crop',
        text: 'Выбор — тоже действие.',
        choices: [{ text: 'Рискнуть и подойти', next: 'approach' }, { text: 'Уйти в темноту', next: 'end_leave' }]
      },
      ask: {
        img: 'https://images.unsplash.com/photo-1469474968028-56623f02e42e?q=80&w=1200&auto=format&fit=crop',
        text: '«Решение — это форма ответственности». Где твоя точка невозврата?',
        choices: [{ text: 'Принять ответственность', next: 'end_accept' }, { text: 'Отложить на потом', next: 'end_delay' }]
      },
      pretend: {
        img: 'https://images.unsplash.com/photo-1500375592092-40eb2168fd21?q=80&w=1200&auto=format&fit=crop',
        text: '«Притворство — тоже выбор». Хочешь честно?',
        choices: [{ text: 'Да, честно', next: 'ask' }, { text: 'Нет, играем дальше', next: 'end_game' }]
      },
      end_accept: {
        img: 'https://images.unsplash.com/photo-1482192596544-9eb780fc7f66?q=80&w=1200&auto=format&fit=crop',
        text: 'Ответственность — это свобода с весом. Конец (A).',
        choices: [{ text: 'Начать заново', next: 'start' }], score: 100
      },
      end_delay: {
        img: 'https://images.unsplash.com/photo-1446776811953-b23d57bd21aa?q=80&w=1200&auto=format&fit=crop',
        text: 'Завтра — ещё один шанс. Конец (B).',
        choices: [{ text: 'Начать заново', next: 'start' }], score: 60
      },
      end_game: {
        img: 'https://images.unsplash.com/photo-1478720568477-152d9b164e26?q=80&w=1200&auto=format&fit=crop',
        text: 'Игра продолжается, но честности меньше. Конец (C).',
        choices: [{ text: 'Начать заново', next: 'start' }], score: 40
      },
      end_leave: {
        img: 'https://images.unsplash.com/photo-1468276311594-df7cb65d8df6?q=80&w=1200&auto=format&fit=crop',
        text: 'Иногда отсутствие — тоже ответ. Конец (D).',
        choices: [{ text: 'Начать заново', next: 'start' }], score: 30
      }
    };

    // ===== Логика новеллы + «очки» =====
    const $img = document.getElementById('sceneImg');
    const $text = document.getElementById('sceneText');
    const $choices = document.getElementById('choices');
    const $meta = document.getElementById('meta');
    const $back = document.getElementById('btnBack');
    const $reset = document.getElementById('btnReset');
    const $restart = document.getElementById('btnRestart');
    const $shareScore = document.getElementById('btnShareScore');

    let history = [];
    let currentKey = 'start';
    let currentScore = 0;

    function render(key){
      const s = SCENES[key];
      if (!s) return;
      currentKey = key;
      currentScore = s.score ?? Math.max(10, 100 - history.length*10); // простая формула, если не финал
      $img.src = s.img;
      $text.textContent = s.text;
      $choices.innerHTML = '';
      s.choices.forEach(c => {
        const btn = document.createElement('button');
        btn.className = 'choice';
        btn.textContent = c.text;
        btn.onclick = () => { history.push(key); render(c.next); };
        $choices.appendChild(btn);
      });
      $meta.textContent = `Сцена: ${key} • шагов: ${history.length} • очки: ${currentScore}`;
    }

    $back.onclick = () => {
      if (!history.length) return;
      render(history.pop());
    };
    $reset.onclick = () => { history = []; render('start'); };
    $restart.onclick = () => { history = []; render('start'); };

    // ===== Интеграция с Telegram Game API =====
    // В режиме «Games» Telegram предоставляет объект TelegramGameProxy
    function shareScore(score){
      if (window.TelegramGameProxy && typeof TelegramGameProxy.shareScore === 'function'){
        TelegramGameProxy.shareScore(score, function(){ /* ok */ });
      } else {
        alert('Очки: ' + score + '\n(Запусти через Telegram → Games, чтобы отправить счёт)');
      }
    }
    $shareScore.onclick = () => shareScore(currentScore);

    render(currentKey);
  </script>
</body>
</html>

import requests
from bs4 import BeautifulSoup
import tkinter as tk
from tkinter import ttk

# Функция для парсинга сайта
def parse_site(url):
    try:
        response = requests.get(url)
        soup = BeautifulSoup(response.text, 'html.parser')
        # Пример: для TASS возьмём заголовок и краткое описание
        title = soup.find('title').text
        description = soup.find('meta', attrs={'name': 'description'})['content']
        return title, description
    except Exception as e:
        return None, f"Ошибка при парсинге: {e}"

# Функция для обновления списка сайтов
def update_site_list():
    for site in sites:
        title, description = parse_site(site['url'])
        if title and description:
            site['title'] = title
            site['description'] = description
        else:
            site['description'] = "Не удалось загрузить данные."

# Интерфейс
root = tk.Tk()
root.title("Парсер новостных сайтов")
root.geometry("800x600")

# Список сайтов
sites = [
    {"url": "https://tass.ru/", "title": "TASS", "description": "Российское информационное агентство."},
    {"url": "https://www.kommersant.ru/", "title": "Коммерсант", "description": "Ежедневная деловая газета."},
    {"url": "https://www.theverge.com/", "title": "The Verge", "description": "Американский технологический сайт."}
]

# Левый фрейм для списка сайтов
left_frame = ttk.Frame(root, width=400, height=600)
left_frame.pack(side="left", fill="both", expand=True)

# Правый фрейм для настроек
right_frame = ttk.Frame(root, width=400, height=600)
right_frame.pack(side="right", fill="both", expand=True)

# Обновить список сайтов
update_site_list()

# Выводим сайты в левом фрейме
for site in sites:
    site_frame = ttk.LabelFrame(left_frame, text=site['title'])
    site_frame.pack(fill="x", padx=5, pady=5)
    title_label = ttk.Label(site_frame, text=site['description'])
    title_label.pack()

root.mainloop()
